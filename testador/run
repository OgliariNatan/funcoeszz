#!/bin/bash
# run - run tests
#
# Usage:
#   ./run zzsenha.sh zzcores.sh   # test zzsenha and zzcores
#   ./run                         # run all tests
#   ./run internet                # run all internet based tests
#   ./run local                   # run all local tests (no internet)
#
# See README.md file for instructions.

tests_dir=$(dirname "$0")
zz_root=$(cd "$tests_dir"; cd ..; pwd)  # handles absolute and relative
tmp='./run.tmp'
tester='bash clitest'

cd "$tests_dir"

# Download clitest if necessary
$tester -V > /dev/null || {
	make -C .. testador/clitest || {
		printf '%s\n' 'Erro ao instalar o programa testador (clitest)'
		exit 1
	}
}

# Create temporary file with ZZ init in full paths
cat > "$tmp" <<EOF
ZZOFF='' . "$zz_root"/funcoeszz \\
	--cor 0 \\
	--path "$zz_root"/funcoeszz \\
	--dir  "$zz_root"/zz
EOF

lista() {
	# We're already inside the tests dir
	local tests_available=$(ls zz*.sh | sed 's/\.sh$//')

	# Filter the results to only contain the functions which already
	# have tests available
	"$zz_root/util/lista.sh" $1 |
		grep -F -x -f <(echo "$tests_available") |

		# We need filenames, not function names
		sed 's/$/.sh/'
}

case "$1" in
	all | todas | "")
		tests="$(lista todas)"
	;;
	internet)
		tests="$(lista internet)"
	;;
	internet_travis | travis)
		tests="$(lista travis)"
	;;
	local | no-internet)
		tests="$(lista no-internet)"
	;;
	core | funcoeszz.md)
		# inject $zz_root into the test env
		echo "zz_root=$zz_root" > $tmp

		tests=funcoeszz.md
	;;
	*)
		tests="$@"
	;;
esac

# Run the tests
# Note: To remove the dots ........ change 'dot' to 'none'
$tester --progress dot --pre-flight ". $tmp" $tests
exitcode=$?

rm "$tmp"
exit "$exitcode"
